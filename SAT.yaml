##################################################################
##########################  SAT v2.1.7  ##########################
#################### Changed by Sergeant "D" #####################
######################### 2022 - 03 - 01 #########################
##################################################################
sensor:
  - platform: template  ##Primary Thermostat Temperature##
    sensors:
      primary_thermostat_temperature:
        value_template: "{{ state_attr('climate.opentherm_thermostat', 'temperature') }}"    ## Replace your_primary_thermostat with your current entity ##
        friendly_name: Primary Thermostat Temperature
        unit_of_measurement: °C
  - platform: template  ##Primary Thermostat Current Temperature##
    sensors:
      primary_thermostat_current_temperature:
        value_template: "{{ state_attr('climate.opentherm_thermostat', 'current_temperature') }}"    ## Replace your_primary_thermostat with your current entity##
        friendly_name: Primary Thermostat Current Temperature
        unit_of_measurement: °C
  - platform: template  ## Heat Curve ##
    sensors:
      heat_curve:
        value_template: "{{ state_attr('climate.living_room_virtual', 'pid_e') }}"  
        friendly_name: Heat Curve
        unit_of_measurement: °C
  - platform: template  ## P ##
    sensors:
      proportional:
        value_template: "{{ state_attr('climate.living_room_virtual', 'pid_p') }}"  
        friendly_name: P
        unit_of_measurement: °C
  - platform: template  ## I ##
    sensors:
      integral:
        value_template: "{{ state_attr('climate.living_room_virtual', 'pid_i') }}"  
        friendly_name: I
        unit_of_measurement: °C
  - platform: template  ## D ##
    sensors:
      derivative:
        value_template: "{{ state_attr('climate.living_room_virtual', 'pid_d') }}"  
        friendly_name: D
        unit_of_measurement: °C
  - platform: template  ##Primary Thermostat HVAC##
    sensors:
      primary_thermostat_hvac:
        value_template: "{{ state_attr('climate.opentherm_thermostat', 'hvac_action') }}"    ## Replace your_primary_thermostat with your current entity##
        friendly_name: Primary Thermostat HVAC
  - platform: template  ##Outside Temperature Sensor##
    sensors:
      outside_temperature:
        value_template: "{{ states('sensor.outside_temperature') }}"    ##If you have your own local temperature sensor replace with the correct entity ( Default temperature by OTGW )##
        friendly_name: Outside Temperature Sensor
  - platform: template ##Heating System##
    sensors:
      heating_system:
        value_template: >
          {% if is_state("input_select.heating_system", "Radiators (High Temperatures)") %}
            0
          {% elif is_state("input_select.heating_system", "Radiators (Low Temperatures)") %}
            0
          {% elif is_state("input_select.heating_system", "Underfloor") %}
            8
          {% else %}
            0
          {% endif %}
        friendly_name: Heating System
        unit_of_measurement: °C 

##################################### CS CALCULATION ########################################################################################        


  - platform: template ##Heating Curve##
    sensors:
      heating_curve_value:
        value_template: >
          {% set OT = states("sensor.outside_temperature") | float(default=15) %}
          {% set CurveMove = states("input_number.heating_curve_move") | float %}
          {% set System = states("sensor.heating_system") | float %}
          {% set HC = states("input_select.heating_curve") | float %}
          {% if HC == 0.1 %}
            {{ "%.1f"%( CurveMove - System + 36.4 - ( 0.00495 * OT**2 ) - ( 0.32 *  OT)) | float}}
          {% elif HC == 0.2 %}
            {{ "%.1f"%( CurveMove - System + 37.7 - ( 0.0052 * OT**2 ) - ( 0.38 *  OT)) | float}}
          {% elif HC == 0.3 %}
            {{ "%.1f"%( CurveMove - System + 39.0 - ( 0.00545 * OT**2 ) - ( 0.44 *  OT)) | float}}
          {% elif HC == 0.4 %}
            {{ "%.1f"%( CurveMove - System + 40.3 - ( 0.0057 * OT**2 ) - ( 0.5 *  OT)) | float}}
          {% elif HC == 0.5 %}
            {{ "%.1f"%( CurveMove - System + 41.6 - ( 0.00595 * OT**2 ) - ( 0.56 *  OT)) | float}}
          {% elif HC == 0.6 %}
            {{ "%.1f"%( CurveMove - System + 43.1 - ( 0.0067 * OT**2 ) - ( 0.62 *  OT)) | float}}
          {% elif HC == 0.7 %}
            {{ "%.1f"%( CurveMove - System + 44.6 - ( 0.00745 * OT**2 ) - ( 0.68 *  OT)) | float}}
          {% elif HC == 0.8 %}
            {{ "%.1f"%( CurveMove - System + 46.1 - ( 0.0082 * OT**2 ) - ( 0.74 *  OT)) | float}}
          {% elif HC == 0.9 %}
            {{ "%.1f"%( CurveMove - System + 47.6 - ( 0.00895 * OT**2 ) - ( 0.8 *  OT)) | float}}
          {% elif HC == 1.0 %}
            {{ "%.1f"%( CurveMove - System + 49.1 - ( 0.0097 * OT**2 ) - ( 0.86 *  OT)) | float}}
          {% elif HC == 1.1 %}
            {{ "%.1f"%( CurveMove - System + 50.8 - ( 0.01095 * OT**2 ) - ( 0.92 *  OT)) | float}}
          {% elif HC == 1.2 %}
            {{ "%.1f"%( CurveMove - System + 52.5 - ( 0.0122 * OT**2 ) - ( 0.98 *  OT)) | float}}
          {% elif HC == 1.3 %}
            {{ "%.1f"%( CurveMove - System + 54.2 - ( 0.01345 * OT**2 ) - ( 1.04 *  OT)) | float}}
          {% elif HC == 1.4 %}
            {{ "%.1f"%( CurveMove - System + 55.9 - ( 0.0147 * OT**2 ) - ( 1.1 *  OT)) | float}}
          {% elif HC == 1.5 %}
            {{ "%.1f"%( CurveMove - System + 57.5 - ( 0.0157 * OT**2 ) - ( 1.16 *  OT)) | float}}
          {% elif HC == 1.6 %}
            {{ "%.1f"%( CurveMove - System + 59.4 - ( 0.01644 * OT**2 ) - ( 1.24 *  OT)) | float}}
          {% elif HC == 1.7 %}
            {{ "%.1f"%( CurveMove - System + 61.3 - ( 0.01718 * OT**2 ) - ( 1.32 *  OT)) | float}}
          {% elif HC == 1.8 %}
            {{ "%.1f"%( CurveMove - System + 63.2 - ( 0.01792 * OT**2 ) - ( 1.4 *  OT)) | float}}
          {% elif HC == 1.9 %}
            {{ "%.1f"%( CurveMove - System + 65.1 - ( 0.01866 * OT**2 ) - ( 1.48 *  OT)) | float}}
          {% elif HC == 2.0 %}
            {{ "%.1f"%( CurveMove - System + 67.0 - ( 0.0194 * OT**2 ) - ( 1.56 *  OT)) | float}}
          {% elif HC == 2.1 %}
            {{ "%.1f"%( CurveMove - System + 69.1 - ( 0.0197 * OT**2 ) - ( 1.66 *  OT)) | float}}
          {% elif HC == 2.2 %}
            {{ "%.1f"%( CurveMove - System + 71.2 - ( 0.01995 * OT**2 ) - ( 1.76 *  OT)) | float}}
          {% elif HC == 2.3 %}
            {{ "%.1f"%( CurveMove - System + 73.3 - ( 0.0202 * OT**2 ) - ( 1.86 *  OT)) | float}}
          {% elif HC == 2.4 %}
            {{ "%.1f"%( CurveMove - System + 75.4 - ( 0.02045 * OT**2 ) - ( 1.96 *  OT)) | float}}
          {% elif HC == 2.5 %}
            {{ "%.1f"%( CurveMove - System + 77.5 - ( 0.02007 * OT**2 ) - ( 2.06 *  OT)) | float}}
          {% elif HC == 2.6 %}
            {{ "%.1f"%( CurveMove - System + 79.8 - ( 0.02045 * OT**2 ) - ( 2.18 *  OT)) | float}}
          {% elif HC == 2.7 %}
            {{ "%.1f"%( CurveMove - System + 82.1 - ( 0.0202 * OT**2 ) - ( 2.3 *  OT)) | float}}
          {% elif HC == 2.8 %}
            {{ "%.1f"%( CurveMove - System + 84.4 - ( 0.01995 * OT**2 ) - ( 2.42 *  OT)) | float}}
          {% elif HC == 2.9 %}
            {{ "%.1f"%( CurveMove - System + 86.7 - ( 0.0197 * OT**2 ) - ( 2.54 *  OT)) | float}}
          {% elif HC == 3.0 %}
            {{ "%.1f"%( CurveMove - System + 89.0 - ( 0.01945 * OT**2 ) - ( 2.66 *  OT)) | float}}
          {% endif %}
        friendly_name: Heating Curve Value
        unit_of_measurement: °C

  - platform: template ##Primary Thermostat Control Setpoint##
    sensors:
      custom_thermostat_control_setpoint:
        value_template: >
          {% set HeatCurve = states("sensor.heating_curve_value") | float %}
          {% set P = state_attr("climate.living_room_virtual", "pid_p") | float %}
          {% set I = state_attr("climate.living_room_virtual", "pid_i") | float %}
          {% set D = state_attr("climate.living_room_virtual", "pid_d") | float %}
          {% set CS = ( HeatCurve + P + I + D ) | float | round(1) %}
          {% set HighTempRad = is_state("input_select.heating_system", "Radiators ( High Temperatures )") %}
          {% set LowTempRad = is_state("input_select.heating_system", "Radiators ( Low Temperatures )") %}
          {% set Underfloor = is_state("input_select.heating_system", "Underfloor") %}
          {% if CS < 10 %}10.0
          {% elif CS > 75 and HighTempRad %}75.0
          {% elif CS > 55 and LowTempRad %}55.0
          {% elif CS > 50 and Underfloor %}50.0
          {% else %}{{ CS }}
          {% endif %}
        friendly_name: Thermostat Control Setpoint
        unit_of_measurement: °C
  - platform: template ##Custom Thermostat CH command##
    sensors:
      custom_thermostat_ch_command:
        value_template: >
          {% if is_state("sensor.primary_thermostat_hvac", "idle") %}0
          {% elif is_state("sensor.primary_thermostat_hvac", "heating") %}1
          {% else %}0
          {% endif %}
        friendly_name: Custom Thermostat CH command


#############BINARY SENSORS#######################

template:
  - binary_sensor:
      - name: Control Setpoint Synchro
        state: >
          {% if states("sensor.custom_thermostat_control_setpoint") | float(default=0) == states("sensor.otgw_control_setpoint") | float(default=0) %}on
          {% elif states("sensor.custom_thermostat_control_setpoint") | float(default=0) != states("sensor.otgw_control_setpoint") | float(default=0) %}off
          {% else %}off
          {% endif %}
  - binary_sensor:
      - name: CH Synchro
        state: >
          {% if is_state("sensor.primary_thermostat_hvac", "heating") and is_state("binary_sensor.otgw_central_heating_enable", "on") %}on
          {% elif is_state("sensor.primary_thermostat_hvac", "idle") and is_state("binary_sensor.otgw_central_heating_enable", "off") %}on
          {% elif is_state("sensor.primary_thermostat_hvac", "idle") and is_state("binary_sensor.otgw_central_heating_enable", "on") %}off
          {% elif is_state("sensor.primary_thermostat_hvac", "heating") and is_state("binary_sensor.otgw_central_heating_enable", "off") %}off       
          {% else %}off
          {% endif %}
  - binary_sensor:
      - name: TS Synchro
        state: >
          {% if state_attr("climate.opentherm_thermostat", "temperature") | float(default=22) == state_attr("climate.living_room_virtual", "temperature") | float(default=22) %}on
          {% elif state_attr("climate.opentherm_thermostat", "temperature") | float(default=22) != state_attr("climate.living_room_virtual", "temperature") | float(default=22) %}off
          {% else %}off
          {% endif %}
 
#############INPUT SELECT#############################

input_select:
  heating_curve:
    name: Heating Curve
    options:
      - 0.1
      - 0.2
      - 0.3
      - 0.4
      - 0.5
      - 0.6
      - 0.7
      - 0.8
      - 0.9
      - 1.0
      - 1.1
      - 1.2
      - 1.3
      - 1.4
      - 1.5
      - 1.6
      - 1.7
      - 1.8
      - 1.9
      - 2.0
      - 2.1
      - 2.2
      - 2.3
      - 2.4
      - 2.5
      - 2.6
      - 2.7
      - 2.8
      - 2.9
      - 3.0
  heating_system:
    name: Heating System
    options:
      - Radiators ( High Temperatures )
      - Radiators ( Low Temperatures )
      - Underfloor

####################### INPUT NUMBER #########################

input_number:
  heating_curve_move:
    name: Heating Curve Move Up/Down
    min: -15
    max: 15
    step: 0.5

############### P I D CALCULATION ############################

climate:
  - platform: smart_thermostat
    name: Living Room Virtual
    unique_id: living_room_virtual
    heater: input_boolean.living_room_heaters
    target_sensor: sensor.primary_thermostat_current_temperature
    min_temp: 7
    max_temp: 30
    ac_mode: False
    target_temp: 22
    keep_alive:
      seconds: 600
    away_temp: 18
    kp : 30
    ki : 0.00044
    kd : 3000
    pwm : 01:00:00




