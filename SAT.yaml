#################################################################
###################  SAT v2.1.3  ################################
###############Developed by Sergeant "D" ########################
########### Changed 2022-02-07 by Richard_HA ####################
#################################################################

# changes: overheat sensor
#          primary derivative


##########SENSORS################################################

sensor:
  - platform: template  ##Primary Thermostat Temperature##
    sensors:
      primary_thermostat_temperature:
        value_template: "{{ state_attr('climate.opentherm_thermostat', 'temperature') }}"    ## Replace your_primary_thermostat with your current entity ##
        friendly_name: Primary Thermostat Temperature
  - platform: template  ##Primary Thermostat Current Temperature##
    sensors:
      primary_thermostat_current_temperature:
        value_template: "{{ state_attr('climate.opentherm_thermostat', 'current_temperature') }}"    ## Replace your_primary_thermostat with your current entity##
        friendly_name: Primary Thermostat Temperature
  - platform: template  ##Primary Thermostat HVAC##
    sensors:
      primary_thermostat_hvac:
        value_template: "{{ state_attr('climate.opentherm_thermostat', 'hvac_action') }}"    ## Replace your_primary_thermostat with your current entity##
        friendly_name: Primary Thermostat HVAC
  - platform: template  ##Outside Temperature Sensor##
    sensors:
      outside_temperature:
        value_template: "{{ states('sensor.outside_temperature') }}"    ##If you have your own local temperature sensor replace with the correct entity ( Default temperature by OTGW )##
        friendly_name: Outside Temperature Sensor
  - platform: template  ##Heating Curve State##
    sensors:
      heating_curve_state:
        value_template: > 
          {% if ( states("sensor.primary_thermostat_temperature") | float(default=22) - states("sensor.primary_thermostat_current_temperature") | float(default=22) ) | float >= 0.3 %}
            Start Mode
          {% elif ( states("sensor.primary_thermostat_temperature") | float(default=22) - states("sensor.primary_thermostat_current_temperature") | float(default=22) ) | float >= 0.05 %}
            Transition Mode
          {% elif ( states("sensor.primary_thermostat_temperature") | float(default=22) - states("sensor.primary_thermostat_current_temperature") | float(default=22) ) | float <= 0.04 %}
            Float Mode
          {% else %}
            Off
          {% endif %}
        friendly_name: Heating Curve State
  - platform: template  ##Heating Curve Sensor##
    sensors:
      thermostat_heating_curve:
        value_template: > 
          {% if is_state("input_select.heating_system", "Radiators (Low Temperatures)") and ( states("sensor.primary_thermostat_temperature") | float(default=22) - states("sensor.primary_thermostat_current_temperature") | float(default=22) ) | float >= 0.3 %}
            {{ "%.1f"%(states("input_select.starting_heating_curve") | float ) | float }}
          {% elif ( states("sensor.primary_thermostat_temperature") | float(default=22) - states("sensor.primary_thermostat_current_temperature") | float(default=22) ) | float >= 0.3 %}
            {{ states("input_select.starting_heating_curve") }}
          {% elif ( states("sensor.primary_thermostat_temperature") | float(default=22) - states("sensor.primary_thermostat_current_temperature") | float(default=22) ) | float >= 0.05 %}
            {{ states("input_select.transition_heating_curve") }}
          {% elif ( states("sensor.primary_thermostat_temperature") | float(default=22) - states("sensor.primary_thermostat_current_temperature") | float(default=22) ) | float <= 0.04 %}
            {{ states("input_select.heating_curve") }}
          {% else %}
            {{ states("input_select.heating_curve") }}
          {% endif %}
        friendly_name: Thermostat Heating Curve
        
  - platform: derivative ##Derivative Primary Thermostat##
    source: sensor.primary_thermostat_current_temperature
    name: Derivative Primary
    round: 4
    unit_time: h
    time_window: "00:30:00"
  - platform: template ##Hierarchy Derivative##
    sensors:
      hierarchy_derivative:
        value_template: >
          {% if is_state("sensor.primary_thermostat_hvac", "heating") and states("sensor.derivative_primary") | float(default=0) >= - 10 and states("sensor.derivative_primary") | float(default=0) <= 10 %}
            {{ states("sensor.derivative_primary") | float(default=0) }}
          {% else %}
            0
          {% endif %}
        friendly_name: Hierarchy Derivative
        unit_of_measurement: 째C/h
  - platform: template ##Hierarchy Mode##
    sensors:
      hierarchy_mode:
        value_template: >
          {% if is_state("sensor.primary_thermostat_hvac", "heating") and states("sensor.derivative_primary") | float(default=0) >= - 10 and states("sensor.derivative_primary") | float(default=0) <= 10 %}
            Primary Thermostat
          {% else %}
            0
          {% endif %}
        friendly_name: Hierarchy Mode
  - platform: template  ##Derivative Sensor##
    sensors:
      derivative_heating_curve:
        value_template: > 
          {% if  is_state("sensor.heating_curve_state", "Start Mode" ) and states("sensor.hierarchy_derivative") | float(default=0) >= - 10 and states("sensor.hierarchy_derivative") | float(default=0) <= 10 %}
            {{ - ( states("input_select.starting_heating_curve") | float * states("sensor.hierarchy_derivative") | float(default=0)) }}
          {% elif  is_state("sensor.heating_curve_state", "Transition Mode" ) and states("sensor.hierarchy_derivative") | float(default=0) >= - 3 and states("sensor.hierarchy_derivative") | float(default=0) <= 3 %}
            {{ - ( states("input_select.transition_heating_curve") | float * ( states("sensor.hierarchy_derivative") | float(default=0) - states("sensor.transition_smooth") | float(default=0))) }}
          {% elif  is_state("sensor.heating_curve_state", "Float Mode" ) and states("sensor.hierarchy_derivative") | float(default=0) >= - 1 and states("sensor.hierarchy_derivative") | float(default=0) <= 1 %}
            {{ - ( states("input_select.heating_curve") | float * states("sensor.hierarchy_derivative") | float(default=0)) }}
          {% else %}
            0
          {% endif %}
        friendly_name: Derivative Heating Curve
        unit_of_measurement: 째C
  - platform: template  ##Heating System##
    sensors:
      heating_system:
        value_template: > 
          {% if is_state("input_select.heating_system", "Radiators (High Temperatures)") %}
            0
          {% elif is_state("input_select.heating_system", "Radiators (Low Temperatures)") %}
            0
          {% elif is_state("input_select.heating_system", "Underfloor") %}
            8
          {% else %}
            0
          {% endif %}
        unit_of_measurement: 째C

###################################################################################################
## OVERHEAT SENSOR  
## overheat value is the kD part off the PID formula to react on temp changes in the room based on the selected Heating curve       
## overheat sensor measures the difference between room temperature setpoint and actual temperature
## The Derivative primary sensor measures the deviation (cooling / heating) of the room in 째C/h
## the multiplier (default = 10) is the D part, influences the speed change of the CS (control setpoint)
## if there's overshoot this value should be changed only! (still in development)
###################################################################################################
  - platform: template  ##Overheat##
    sensors:
      overheat:
        value_template: 
          "{{(states('sensor.primary_thermostat_current_temperature') | float(default=22) - states('sensor.primary_thermostat_temperature') | float(default=22))*((2.71828183*2.71828183)*10*states('sensor.derivative_primary')| float(default=0.001))}}"
        friendly_name: Overheat

  - platform: template  ##Heating Curve##
    sensors:
      custom_heating_curve:
        value_template: >
          {% if is_state("sensor.thermostat_heating_curve", "0.1") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 36.4 - ( 0.00495 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.32 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "0.2") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 37.7 - ( 0.0052 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.38 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "0.3") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 39.0 - ( 0.00545 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.44 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "0.4") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 40.3 - ( 0.0057 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.5 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "0.5") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 41.6 - ( 0.00595 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.56 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "0.6") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 43.1 - ( 0.0067 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.62 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "0.7") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 44.6 - ( 0.00745 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.68 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "0.8") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 46.1 - ( 0.0082 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.74 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "0.9") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 47.6 - ( 0.00895 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.8 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.0") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 49.1 - ( 0.0097 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.86 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.1") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 50.8 - ( 0.01095 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.92 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.2") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 52.5 - ( 0.0122 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 0.98 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.3") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 54.2 - ( 0.01345 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.04 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.4") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 55.9 - ( 0.0147 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.1 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.5") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 57.5 - ( 0.0157 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.16 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.6") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 59.4 - ( 0.01644 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.24 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.7") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 61.3 - ( 0.01718 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.32 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.8") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 63.2 - ( 0.01792 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.4 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "1.9") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 65.1 - ( 0.01866 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.48 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.0") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 67.0 - ( 0.0194 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.56 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.1") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 69.1 - ( 0.0197 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.66 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.2") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 71.2 - ( 0.01995 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.76 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.3") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 73.3 - ( 0.0202 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.86 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.4") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 75.4 - ( 0.02045 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 1.96 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.5") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 77.5 - ( 0.02007 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 2.06 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.6") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 79.8 - ( 0.02045 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 2.18 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.7") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 82.1 - ( 0.0202 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 2.3 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.8") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 84.4 - ( 0.01995 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 2.42 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "2.9") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 86.7 - ( 0.0197 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 2.54 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% elif is_state("sensor.thermostat_heating_curve", "3.0") %}{{ "%.1f"%( states("input_number.heating_curve_move") | float - states("sensor.heating_system") | float + 89.0 - ( 0.01945 * (states("sensor.outside_temperature") | float(default=15)**2 )) - ( 2.66 * states("sensor.outside_temperature") | float(default=15) ) + states("sensor.derivative_heating_curve") | float(default=0)) | float}}
          {% endif %}
        friendly_name: Custom Heating Curve
        unit_of_measurement: 째C
  - platform: template  ##Primary Thermostat Control Setpoint Formula##
    sensors:
      custom_primary_thermostat_control_setpoint_formula:
        value_template: '{{ "%.1f"%(( states("sensor.custom_heating_curve") | float ) + ( states("sensor.primary_thermostat_temperature") | float(default=22) - 20 ) - states("sensor.overheat") | float + ( 10 * states("sensor.thermostat_heating_curve")| float * ( states("sensor.primary_thermostat_temperature") | float(default=22) - states("sensor.primary_thermostat_current_temperature") | float(default=22) )))|float }}'
        friendly_name: Primary Thermostat Control Setpoint Formula
        unit_of_measurement: 째C
  - platform: template  ##Primary_Thermostat Control Setpoint##
    sensors:
      custom_primary_thermostat_control_setpoint:
        value_template: >
          {% if states("sensor.custom_primary_thermostat_control_setpoint_formula") | float < 10 %}
            10.0
          {% elif states("sensor.custom_primary_thermostat_control_setpoint_formula") | float >= 10 and states("sensor.custom_primary_thermostat_control_setpoint_formula") | float <= 75 %}
            {{states("sensor.custom_primary_thermostat_control_setpoint_formula") | float}}
          {% elif states("sensor.custom_primary_thermostat_control_setpoint_formula") | float > 75 %}
            75.0
          {% endif %}
        friendly_name: Custom Primary Thermostat Control Setpoint
        unit_of_measurement: 째C
  - platform: template  ##Max Control Setpoint##
    sensors:
      custom_max_control_setpoint:
        value_template: >
          {% if states("sensor.custom_primary_thermostat_control_setpoint") | float < 1000 %}
            {{ states("sensor.custom_primary_thermostat_control_setpoint") | float }}
          {% else %}
            {{ states("sensor.custom_primary_thermostat_control_setpoint") | float }}
          {% endif %}
        friendly_name: Custom Max Control Setpoint
        unit_of_measurement: 째C
  - platform: template  ##Custom Thermostat Control Setpoint##
    sensors:
      custom_thermostat_control_setpoint:
        value_template: >
          {% if is_state("sensor.primary_thermostat_hvac", "idle") %}
            0
          {% elif states("sensor.custom_max_control_setpoint") | float <= 20 %}
            0
          {% elif is_state("input_select.heating_system", "Radiators ( High Temperatures )") and states("sensor.custom_max_control_setpoint") | float >= 20.01 and states("sensor.custom_max_control_setpoint") | float <= 75 %}
            {{states("sensor.custom_max_control_setpoint") | float}}
          {% elif is_state("input_select.heating_system", "Radiators ( High Temperatures )") and states("sensor.custom_max_control_setpoint") | float > 75 %}
            75.0
          {% elif is_state("input_select.heating_system", "Radiators ( Low Temperatures )") and states("sensor.custom_max_control_setpoint") | float >= 20.01 and states("sensor.custom_max_control_setpoint") | float <= 55 %}
            {{states("sensor.custom_max_control_setpoint") | float}}
          {% elif is_state("input_select.heating_system", "Radiators ( Low Temperatures )") and states("sensor.custom_max_control_setpoint") | float > 55 %}
            55.0            
          {% elif is_state("input_select.heating_system", "Underfloor") and states("sensor.custom_max_control_setpoint") | float >= 20.01 and states("sensor.custom_max_control_setpoint") | float <= 55 %}
            {{states("sensor.custom_max_control_setpoint") | float}}
          {% elif is_state("input_select.heating_system", "Underfloor") and states("sensor.custom_max_control_setpoint") | float > 55 %}
            55.0  
          {% endif %}
        friendly_name: Custom Thermostat Control Setpoint
  - platform: template   ##Custom Thermostat CH command##
    sensors:
      custom_thermostat_ch_command:
        value_template: >
          {% if is_state("sensor.primary_thermostat_hvac", "idle") %}0
          {% elif is_state("sensor.primary_thermostat_hvac", "heating") %}1
          {% else %}0
          {% endif %}
        friendly_name: Custom Thermostat CH command

################ UNDER DEVELOPMENT ###############

  - platform: template
    sensors:
      start_time:
        value_template: >
          {% if is_state("sensor.heating_curve_state", "Start Mode") %}
            {{ "%.0f"%((as_timestamp(now()) - as_timestamp(states.sensor.heating_curve_state.last_changed)) | float / 60 ) }}
          {% else %}
            0
          {% endif %} 
        friendly_name: Start Time
  - platform: template
    sensors:
      transition_time:
        value_template: >
          {% if is_state("sensor.heating_curve_state", "Transition Mode") %}
            {{ "%.0f"%((as_timestamp(now()) - as_timestamp(states.sensor.heating_curve_state.last_changed)) | float / 60 ) }}
          {% else %}
            0
          {% endif %} 
        friendly_name: Transition Time
  - platform: template
    sensors:
      float_time:
        value_template: >
          {% if is_state("sensor.heating_curve_state", "Float Mode") %}
            {{ "%.0f"%((as_timestamp(now()) - as_timestamp(states.sensor.heating_curve_state.last_changed)) | float / 60 ) }}
          {% else %}
            0
          {% endif %} 
        friendly_name: Float Time
  - platform: template
    sensors:
      transition_smooth:
        value_template: >
          {% if is_state("sensor.heating_curve_state", "Transition Mode") and states("sensor.derivative_heating_curve") | float(default=0) > 0 and states("sensor.transition_time") | float(default=0) <= 3 %}
            {{ "%.1f"%(states("sensor.hierarchy_derivative") | float(default=0)) }}
          {% elif is_state("sensor.heating_curve_state", "Transition Mode") and states("sensor.derivative_heating_curve") | float(default=0) > 0 and states("sensor.transition_time") | float(default=0) > 3 and states("sensor.transition_time") | float(default=0) <= 6 %}
            {{ "%.1f"%(0.75 * states("sensor.hierarchy_derivative") | float(default=0)) }}
          {% elif is_state("sensor.heating_curve_state", "Transition Mode") and states("sensor.derivative_heating_curve") | float(default=0) > 0 and states("sensor.transition_time") | float(default=0) > 6 and states("sensor.transition_time") | float(default=0) <= 9 %}
            {{ "%.1f"%(0.5 * states("sensor.hierarchy_derivative") | float(default=0)) }}
          {% elif is_state("sensor.heating_curve_state", "Transition Mode") and states("sensor.derivative_heating_curve") | float(default=0) > 0 and states("sensor.transition_time") | float(default=0) > 9 and states("sensor.transition_time") | float(default=0) <= 12 %}
            {{ "%.1f"%(0.25 * states("sensor.hierarchy_derivative") | float(default=0)) }}
          {% else %}
            0
          {% endif %} 
        friendly_name: Transition Smooth

#############BINARY SENSORS#######################

template:
  - binary_sensor:
      - name: Control Setpoint Synchro
        state: >
          {% if states("sensor.custom_thermostat_control_setpoint") | float(default=0) == states("sensor.otgw_control_setpoint") | float(default=0) %}on
          {% elif states("sensor.custom_thermostat_control_setpoint") | float(default=0) != states("sensor.otgw_control_setpoint") | float(default=0) %}off
          {% else %}off
          {% endif %}
  - binary_sensor:
      - name: CH Synchro
        state: >
          {% if is_state("sensor.primary_thermostat_hvac", "heating") and is_state("binary_sensor.otgw_central_heating_enable", "on") %}on
          {% elif is_state("sensor.primary_thermostat_hvac", "idle") and is_state("binary_sensor.otgw_central_heating_enable", "off") %}on
          {% elif is_state("sensor.primary_thermostat_hvac", "idle") and is_state("binary_sensor.otgw_central_heating_enable", "on") %}off
          {% elif is_state("sensor.primary_thermostat_hvac", "heating") and is_state("binary_sensor.otgw_central_heating_enable", "off") %}off       
          {% else %}off
          {% endif %}

#############INPUT SELECT#############################

input_select:
  starting_heating_curve:
    name: Starting Heating Curve
    options:
      - 0.1
      - 0.2
      - 0.3
      - 0.4
      - 0.5
      - 0.6
      - 0.7
      - 0.8
      - 0.9
      - 1.0
      - 1.1
      - 1.2
      - 1.3
      - 1.4
      - 1.5
      - 1.6
      - 1.7
      - 1.8
      - 1.9
      - 2.0
      - 2.1
      - 2.2
      - 2.3
      - 2.4
      - 2.5
      - 2.6
      - 2.7
      - 2.8
      - 2.9
      - 3.0
  transition_heating_curve:
    name: Transition Heating Curve
    options:
      - 0.1
      - 0.2
      - 0.3
      - 0.4
      - 0.5
      - 0.6
      - 0.7
      - 0.8
      - 0.9
      - 1.0
      - 1.1
      - 1.2
      - 1.3
      - 1.4
      - 1.5
      - 1.6
      - 1.7
      - 1.8
      - 1.9
      - 2.0
      - 2.1
      - 2.2
      - 2.3
      - 2.4
      - 2.5
      - 2.6
      - 2.7
      - 2.8
      - 2.9
      - 3.0
  heating_curve:
    name: Heating Curve
    options:
      - 0.1
      - 0.2
      - 0.3
      - 0.4
      - 0.5
      - 0.6
      - 0.7
      - 0.8
      - 0.9
      - 1.0
      - 1.1
      - 1.2
      - 1.3
      - 1.4
      - 1.5
      - 1.6
      - 1.7
      - 1.8
      - 1.9
      - 2.0
      - 2.1
      - 2.2
      - 2.3
      - 2.4
      - 2.5
      - 2.6
      - 2.7
      - 2.8
      - 2.9
      - 3.0
  heating_system:
    name: Heating System
    options:
      - Radiators ( High Temperatures )
      - Radiators ( Low Temperatures )
      - Underfloor

####################### INPUT NUMBER #########################

input_number:
  heating_curve_move:
    name: Heating Curve Move Up/Down
    min: -15
    max: 15
    step: 0.5